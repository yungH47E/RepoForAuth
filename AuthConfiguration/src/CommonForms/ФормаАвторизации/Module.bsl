#Область ОписаниеПеременных
&НаКлиенте
Перем АвторизацияУспешна;
#КонецОбласти

#Область ОбработчикиСобытийФормы
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	АвторизацияУспешна = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если АвторизацияУспешна = Ложь Тогда
		ЗавершитьРаботуСистемы(Ложь, Ложь);
	Иначе
		Закрыть();
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ПоказатьСкрытьПароль(Команда)
	Если Элементы.Пароль.РежимПароля = Истина тогда
		Элементы.ПоказатьСкрытьПароль.Картинка = БиблиотекаКартинок.СкрытьПароль;
		Элементы.Пароль.РежимПароля = Ложь
	Иначе
		Элементы.ПоказатьСкрытьПароль.Картинка = БиблиотекаКартинок.ПоказатьПароль;
		Элементы.Пароль.РежимПароля = Истина
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Вход(Команда)
	ОбработкаВхода();
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаКлиенте
Процедура ОбработкаВхода()
	Если не ЗначениеЗаполнено(Логин) или не ЗначениеЗаполнено(Пароль) Тогда
		ОбработкаОшибки("Введите данные!");
	Иначе
		ТекущийПользователь = НайтиТекущегоПользователя(Логин);
		Если ТекущийПользователь = Неопределено Тогда
			ОбработкаОшибки("Пользователь не найден!");
		Иначе
			Если Пароль = ТекущийПользователь.Пароль Тогда
				АвторизацияУспешна = Истина;
				Закрыть();
			Иначе
				ОбработкаОшибки("Пароль неверный!");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НайтиТекущегоПользователя(Логин)
	ТекущийПользователь = Справочники.Пользователи.ПоискТекущегоПользователя(Логин);
	Если ЗначениеЗаполнено(ТекущийПользователь) Тогда
		Возврат ТекущийПользователь;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ОбработкаОшибки(Ошибка)
	Элементы.ДекорацияОшибки.Заголовок = Ошибка;
КонецПроцедуры

#КонецОбласти